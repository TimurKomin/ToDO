{"version":3,"sources":["Components/ Button.jsx","Components/InputTodo.jsx","api/http.js","Components/TodoItems.jsx","Components/AddTask.jsx","Components/Buttons.jsx","Components/Pagination.jsx","Components/Todos.jsx","App.js","index.js"],"names":["Button","_ref","body","classStyle","callback","id","react_default","a","createElement","className","onClick","InputTodo","type","placeholder","value","props","Object","objectWithoutProperties","assign","onChange","http","axios","create","baseURL","TodoItems","todo","deleteTasks","checkTask","_useState","useState","_useState2","slicedToArray","inputCreate","setInputCreate","_useState3","_useState4","inputItemValue","setInputItemValue","changeTask","_ref2","asyncToGenerator","_regeneratorRuntime","mark","_callee","e","uuid","wrap","_context","prev","next","patch","concat","name","t0","console","log","stop","_x","_x2","apply","this","arguments","rewrite","valueItem","saveSpan","key","target","Components_InputTodo","checked","done","onDoubleClick","autoFocus","onBlur","saveTask","onKeyDown","_Button","AddTask","addTodoHandler","inputValue","getValue","sortByDate","statusFilter","Buttons","setCurrentPage","checkAll","setFilter","todos","filter","every","item","Pagination","countButtons","selectPage","currentPage","totalPage","map","Math","random","Todos","setTodos","check","setCheck","_useState5","_useState6","setInputValue","_useState7","_useState8","_useState9","_useState10","_useState11","_useState12","sortTasks","setSortTask","_useState13","_useState14","setTotalPage","_useState15","_useState16","setStatusFilter","_useState17","_useState18","setCountButtons","useEffect","getTodos","length","toConsumableArray","Array","keys","Todos_regeneratorRuntime","response","get","sent","data","tasks","ceil","count","postTodos","_callee2","obj","_context2","post","alert","_ref4","_callee4","arrProm","_context4","_ref5","Promise","all","_ref6","_callee5","_context5","_ref7","delete","_ref8","_callee6","_context6","_x3","_x4","Components_AddTask","trim","newTask","taskCraete","preventDefault","Components_Buttons","Components_TodoItems","Components_Pagination","Number","App","style","textAlign","Components_Todos","ReactDOM","createRoot","document","getElementById","render","src_App"],"mappings":"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","file":"static/js/main.f28901de.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../Styles/Buttons.css\";\nconst Button = ({ body, classStyle, callback, id }) => {\n    return (\n    <button id={id} className={classStyle} onClick={callback}>\n        {body}\n    </button>\n    );\n};\nexport default Button;\n","import React from \"react\";\nimport \"../Styles/AddTask.css\";\nconst InputTodo = ({\n  type,\n  placeholder,\n  classStyle,\n  value,\n  callback,\n  ...props\n}) => {\n  return (\n    <input\n      onChange={callback}\n      type={type}\n      placeholder={placeholder}\n      className={classStyle}\n      value={value}\n      {...props}\n    />\n  );\n};\n\nexport default InputTodo;\n","import axios from 'axios';\n\nconst http = axios.create({\n    baseURL: `https://todo-api-learning.herokuapp.com/v1`\n})\n\nexport {\n    http\n}","import React from \"react\";\nimport Button from \"./ Button\";\nimport InputTodo from \"./InputTodo\";\nimport { useState } from \"react\";\nimport { http } from \"../api/http\"; \n\nconst TodoItems = ({ todo, deleteTasks, checkTask }) => {\n    const [inputCreate, setInputCreate] = useState(true);\n    const [inputItemValue, setInputItemValue] = useState(\"\");\n    \n    const changeTask = async (e, uuid) => {\n        try {\n            await http.patch(`/task/6/${uuid}`, {\n            name: inputItemValue,\n            });\n        } catch (err) {\n            console.log(err);\n        }\n        };\n\n    const openInput = () => {\n    setInputCreate(prev => !prev);\n    rewrite();\n    };\n    const rewrite = () => {\n    let valueItem = todo.name;\n    setInputItemValue(valueItem);\n    return valueItem;\n    };\n\n    const saveTask = (e) => {\n    setInputItemValue(e.target.value);\n    };\n\n    const saveSpan = (e, uuid) => {\n    if (e.key === \"Enter\" || e.type === 'blur') {\n        if(e.target.value){\n        todo.name = inputItemValue;\n        changeTask(e, uuid)\n        }\n        setInputCreate(!inputCreate);\n        \n    } else if (e.key === \"Escape\") {\n        setInputCreate(!inputCreate);\n    }\n    };\n\n    return (\n    <li id={todo.uuid}>\n        <InputTodo\n        checked={todo.done}\n        todo={todo}\n        callback={(e) => checkTask(e, todo.uuid)}\n        type={\"checkbox\"}\n        />\n        {inputCreate === true ? (\n        <span onDoubleClick={openInput} id={todo.uuid}>\n            {\" \"}\n            {todo.name}{\" \"}\n        </span>\n        ) : (\n        <input\n            autoFocus\n            className=\"input-li\"\n            value={inputItemValue}\n            onBlur={(e) => saveSpan(e, todo.uuid)}\n            onChange={(e) => saveTask(e, todo.uuid)}\n            onKeyDown={(e) => saveSpan(e, todo.uuid)}\n        />\n        )}\n        <Button\n        body={\"DEL\"}\n        classStyle={\"btn-del\"}\n        callback={() => deleteTasks(todo.uuid)}\n        />\n    </li>\n    );\n};\n\nexport default TodoItems;\n","import React, { useState } from \"react\";\nimport Button from \"./ Button\";\nimport \"../Styles/Button.css\";\nimport \"../Styles/AddTask.css\";\nimport InputTodo from \"./InputTodo\";\nconst AddTask = ({\n    addTodoHandler,\n    inputValue,\n    getValue,\n    sortByDate,\n    statusFilter,\n    }) => {\n    const keyAdd = (e) => {\n        if (e.key === \"Enter\") {\n        addTodoHandler();\n        }\n    };\n    return (\n        <div className=\"add-task\">\n        <InputTodo\n            onKeyDown={keyAdd}\n            type={\"text\"}\n            value={inputValue}\n            placeholder={\"New Task..\"}\n            classStyle={\"from-control\"}\n            callback={getValue}\n        />\n        <Button body={\"Add\"} classStyle={\"btn-add\"} callback={addTodoHandler} />\n        <div className=\"block-sort\">\n            Sort By Date\n            <Button\n            body={statusFilter}\n            callback={sortByDate}\n            classStyle={\"btn-swap\"}\n            />\n        </div>\n        </div>\n    );\n    };\n    export default AddTask;\n","import React, { useState } from \"react\";\nimport Button from \"./ Button\";\nimport \"../Styles/Button.css\";\nimport InputTodo from \"./InputTodo\";\nconst Buttons = ({\n    deleteTasks,\n    setCurrentPage,\n    checkAll,\n    setFilter,\n    todos,\n    filter,\n    }) => {\n    return (\n        <div className=\"buttons\">\n        <div className=\"check-del\">\n            <InputTodo\n            type={\"checkbox\"}\n            classStyle={\"check-all\"}\n            callback={checkAll}\n            checked={todos.every((item) => item.done == true)}\n            />\n            <p>Check All</p>\n            <Button\n            callback={deleteTasks}\n            body={\"Delete\"}\n            classStyle={\"btn-delete\"}\n            />\n        </div>\n        <div className=\"sort-btn\">\n            <Button\n            body={\"Active\"}\n            callback={() => { setFilter(\"undone\"); setCurrentPage(0) }}\n            classStyle={filter === 'undone' ? \"button-active\" : \"btn-active\"}\n            />\n            <Button\n            body={\"Done\"}\n            callback={() =>{ setFilter(\"done\"); setCurrentPage(0) }}\n            classStyle={filter === 'done' ? \"button-active\" : \"btn-done\"}\n            />\n            <Button\n            body={\"All\"}\n            callback={() => { setFilter(\"\"); setCurrentPage(0) }}\n            classStyle={filter === \"\" ? \"button-active\" : \"btn-all\"}\n            />\n        </div>\n        </div>\n    );\n};\nexport default Buttons;\n","import React from \"react\";\nimport \"../Styles/Pagination.css\";\nimport Button from \"./ Button\";\nimport \"../Styles/Button.css\";\nconst Pagination = ({\n    countButtons,\n    selectPage,\n    currentPage,\n    setCurrentPage,\n    totalPage,\n    }) => {\n        \n    return (\n        <div className=\"block-pagin\">\n        <Button\n            body={\"Begining\"}\n            callback={() => setCurrentPage((currentPage) => 0)}\n        />\n        <Button\n            body={\"<<\"}\n            callback={() =>\n            currentPage >= 1 ? setCurrentPage(currentPage - 1) : false\n            }\n            classStyle={\"pagins-l\"}\n        />\n\n        {countButtons.map((item) => {\n            return (\n            <Button\n                item={item}\n                callback={selectPage}\n                classStyle={currentPage === item ? \"button-pgn-active\" : \"\"}\n                id={item}\n                body={item + 1}\n                key={Math.random()}\n            ></Button>\n            );\n        })}\n\n        <Button\n            body={\">>\"}\n            callback={() =>\n            currentPage + 1  < totalPage\n                ? setCurrentPage(currentPage + 1)\n                : false\n            }\n            classStyle={\"pagins-r\"}\n        />\n        <Button\n            body={\"In The End\"}\n            callback={() =>\n            setCurrentPage((currentPage) => (currentPage = totalPage - 1))\n            }\n        />\n        </div>\n    );\n};\nexport default Pagination;\n","import React, { Component, useState, useEffect } from \"react\";\nimport AddTask from \"./AddTask\";\nimport Buttons from \"./Buttons\";\nimport Pagination from \"./Pagination\";\nimport \"../Styles/Todos.css\";\nimport TodoItems from \"./TodoItems\";\nimport { http } from \"../api/http\";\n\nconst Todos = () => {\n    const [todos, setTodos] = useState([]);\n    const [check, setCheck] = useState(true);\n    const [inputValue, setInputValue] = useState(\"\");\n    const [currentPage, setCurrentPage] = useState(0);\n    const [filter, setFilter] = useState(\"\");\n    const [sortTasks, setSortTask] = useState(\"asc\");\n    const [totalPage, setTotalPage] = useState(0);\n    const [statusFilter, setStatusFilter] = useState('OLD');\n    const [countButtons, setCountButtons] = useState([]);\n\n    useEffect(() => {\n        getTodos();\n        }, [ currentPage, filter, sortTasks]);\n\n    useEffect(() => {if (todos.length === 0 && currentPage > 0){\n            setCurrentPage(prev => prev-1)};\n            }, [todos.length]);\n        \n    useEffect(() => {\n        setCountButtons([...new Array(totalPage).keys()]);\n        }, [totalPage, todos]);\n        \n    const selectPage = (e) => {\n    setCurrentPage(Number(e.target.id));\n    };\n\n    const getTodos = async () => {\n    try {\n        const response = await http.get(\n        `/tasks/6?page=${\n            currentPage + 1\n        }&order=${sortTasks}&pp=5&filterBy=${filter}`\n        );\n        setTodos(response.data.tasks);\n        setTotalPage(Math.ceil(response.data.count / 5));\n    } catch (err) {\n        console.log(err);\n    }\n    };\n\n    const postTodos = async (obj) => {\n    try {\n        await http.post(\"task/6\", obj);\n        alert('Задача добавлена');\n    } catch (err) {\n        alert('Задача не добавлена');\n    }\n    getTodos();\n    };\n\n    \n\n    const deleteTask = async (uuid) => {\n    try {\n        await http.delete(`/task/6/${uuid}`);\n    } catch (err) {\n        console.log(err);\n    }\n    getTodos()   \n    };\n\n    const taskCraete = () => {\n        if (inputValue.trim()) {\n            const newTask = {\n            name: inputValue,\n            done: false,\n            };  \n        postTodos(newTask);\n        setTodos([...todos, newTask]);\n    }\n    };\n\n    const getValue = (e) => {\n        let value = e.target.value;\n        setInputValue(value);\n        e.preventDefault();\n    };\n\n    const addTodoHandler = () => {\n        taskCraete();\n        setInputValue(\"\");\n    };\n\n    const sortByDate = () => {\n        setStatusFilter('NEW')\n        if(statusFilter === 'NEW') setStatusFilter('OLD');\n        setSortTask(\"desc\");\n        if (sortTasks === \"desc\") setSortTask(\"asc\");\n    };\n\n    const checkAll = async () => {\n        setCheck(!check)\n        if(todos.length){\n            const arrProm = todos.map(({ uuid }) =>\n            http.patch(`/task/6/${uuid}`, { done: check })\n            );\n            try {\n            const resp = await Promise.all(arrProm);\n            getTodos()\n            } catch (err) {\n            console.log(err);\n            }\n        }  \n    };\n\n\n    const deleteTasks = async () => {\n        if(todos.length){\n            const arrProm = todos.map(({ uuid }) => http.delete(`/task/6/${uuid}`));\n            try {\n                const resp = await Promise.all(arrProm);\n            } catch (err) {\n                console.log(err);\n            }\n            getTodos();\n        }\n    };\n\n\n    const checkTask = async (e, uuid) => {\n        try {\n            const resp = await http.patch(`/task/6/${uuid}`, {\n            done: e.target.checked,\n            });\n        } catch (err) {\n            alert(err);\n        }\n        getTodos();\n\n        };\n\n    return (\n        <div id=\"Todos\">\n            <AddTask\n            statusFilter={statusFilter}\n            addTodoHandler={addTodoHandler}\n            inputValue={inputValue}\n            getValue={getValue}\n            sortByDate={sortByDate}\n            />\n            <Buttons\n                    setCurrentPage={setCurrentPage}\n                    filter={filter}\n                    setFilter={setFilter}\n                    checkAll={checkAll}\n                    todos={todos}\n                    deleteTasks={deleteTasks}\n                />\n                <ul className=\"todo-items\">\n                    {todos.map((todo) => {\n                    return (\n                        <TodoItems\n                        id={todo.uuid}\n                        checkTask={checkTask}\n                        key={todo.uuid}\n                        todo={todo}\n                        deleteTasks={deleteTasks}\n                        />\n                    );\n                    })}\n                </ul>\n                <Pagination\n                    countButtons={countButtons}\n                    totalPage={totalPage}\n                    currentPage={currentPage}\n                    setCurrentPage={setCurrentPage}\n                    selectPage={selectPage}\n                />\n        </div>\n    );\n};\nexport default Todos;\n","import React, {useState} from \"react\";\nimport { ReactDOM } from \"react\";\nimport '../src/Styles/Body.css'\nimport TodoItems from \"./Components/TodoItems\";\nimport Todos from \"./Components/Todos\";\n\nfunction App() {\n  return (\n    <div className=\"body-app\">\n      <h1 style={{textAlign:'center'}}>todo</h1>\n      <Todos/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <App />\n  \n);\n"],"sourceRoot":""}